extends ../layout
include ../includes/_paginate

block content
  .container
    form.form-inline.search-input-group(action='/events', method='GET')
      label(for="search") search
      i.fa.fa-search
      select.custom-select(type=String, name='setting', aria-label='Search-Setting', value=setting)
        option(selected='Keyword') Search Setting
        option(value='Keyword') Keyword
        option(value='Location') Location
        option(value='Type') Type
      input.form-control.mr-sm-2(type='text', name='term', placeholder='Search', aria-label='Search', value=term)
    
    form.form-inline.search-input-group(action='/events', method='GET')
      label(for="recommendation") recommendation
      i.fa.fa-search
      select.custom-select(type=String, name='recommendationSetting', aria-label='recommendationSetting', value=recommendationSetting)
        option(selected='Review') Search Setting
        option(value='Review') Review
        option(value='Location') Location
        option(value='Participants') Participants
      input.form-control.mr-sm-2(type='text', name='recommendation', placeholder='Search', aria-label='Search', value=recommendation)

    h1.main-title 
      | Events
      if events.total > 0
        .small Total #{events.total} events(s)

      if events.total <= 0 
        .alert.alert-info No events available yet
      else
        .events
          each event in events.docs
            .event
              a.title(href=`/events/${event.id}`)= event.title
              //include _events

        +paginate(events, '/events', query)

    hr
    a.btn.btn-primary(href='/events/new') CREATE EVENT
